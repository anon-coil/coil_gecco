README
------
Code for the paper entitled "COIL: Constrained Optimization in Learned Latent Space"


Top-level directory
.
├── coil                   	# COIL (for C1, C2 and C3)
├── stackedcoil            	# StackedCOIL (for C4)
└── coilfm                 	# COILfm (for C5)

Required packages:
deap==1.3.1
pytorch==1.9.0 
numpy==1.18.5
matplotlib==3.4.3


----
Directory: COIL
----
.
├── ...
├── coil            		# COIL code for C1, C2 and C3
│   ├── c1.py         		# Specifies objective, constraint and settings for C1
│   ├── c2.py          		# Specifies objective, constraint and settings for C2
│   ├── c3.py         		# Specifies objective, constraint and settings for C3
│   ├── generate_data.py	# COIL Step 1 for C1 and C3: generates data for C1 and C3
│   ├── generate_data_c2.py	# COIL Step 1 for C2: generates data specifically for C2
│   ├── learn_representation.py# COIL Step 2: learns representation
│   ├── optimise.py		# COIL Step 3: optimise
│   ├── ga.py			# Standard GA
│   ├── analyse.py             # Compares results from GA and COIL and produces charts
│   ├── data             	# Folder containing data generated by generate_data.py
│   ├── vae             	# Folder containing VAEs generated by learn_representation.py
│   ├── results             	# Folder containing results generated by optimse.py and ga.py
│   └── image                	# Folder containing images generated by analyse.py
└── ...


* To run COIL for C1 with 3 variables:

>> python generate_data.py -e c1 -v 3
>> python learn_representation.py -e c1 -v 3
>> python optimise.py -e c1 -v 3 -r 100



----
Directory: StackedCOIL
----
.
├── ...
├── stackedcoil            		# StackedCOIL code for C4
│   ├── cmulti_2c.py         		# Specifies objective, constraint and settings for C4.1,C4.2
│   ├── cmulti_3c.py         		# Specifies objective, constraint and settings for C4.1,C4.2,C4.3
│   ├── cmulti_4c.py         		# Specifies objective, constraint and settings for C4.1,C4.2,C4.3,C4.4
│   ├── cmulti_c1243_2c.py     		# Specifies objective, constraint and settings for C4.1,C4.2
│   ├── cmulti_c1243_3c.py     		# Specifies objective, constraint and settings for C4.1,C4.2,C4.4
│   ├── cmulti_c1243_4c.py     		# Specifies objective, constraint and settings for C4.1,C4.2,C4.4,C4.3
│   ├── generate_data_c0.py		# Generates data for the first constraint c0
│   ├── generate_data_cn.py		# Generates data for the other constraints
│   ├── learn_representation_c0n.py	# Learn representation for constraint c0..cn
│   ├── optimise.py			# Optimises using the final VAE
│   ├── analyse_stackedcoil.py         # Compares results from GA, COIL and StackedCOIL and produces charts
│   ├── data             		# Folder containing data generated by generate_data.py
│   ├── vae             		# Folder containing VAEs generated by learn_representation.py
│   ├── results             		# Folder containing results generated by optimse.py and ga.py
│   └── image                		# Folder containing images generated by analyse.py
└── ...


* To run StackedCOIL on C4 for 2 constraints (cmulti_2c.py) (note we always use 4 variables)

>> python generate_data_c0.py -e cmulti_2c -v 4
>> python learn_representation_c0n.py -e cmulti_2c -v 4 -c 0
>> python generate_data_c1n.py -e cmulti_2c -v 4 -c 1
>> python learn_representation_c0n.py -e cmulti_2c -v 4 -c 1
>> python optimise.py -e cmulti_2c -v 4 -r 100



----
Directory: COILfm
----
.
├── ...
├── coilfm            			# COILfm code for C5
│   ├── cdiscon.py         		# Specifies objective, constraint and settings for C5
│   ├── dejong.py			# COILfm Step 1: Generate data (for flow-based VAE)
│   ├── vae.py				# COILfm Step 2: Learn representation (flow-based VAE)
│   ├── optimise.py			# COILfm Step 3: Optimises (flow-based VAE)
│   ├── analyse_coilfm.py	        # Compares results from GA, COIL and COILfm and produces charts
│   ├── vae             		# Folder containing flow VAE
│   ├── results             		# Folder containing results generated by optimse.py and ga.py
│   └── image                		# Folder containing images generated by analyse.py
└── ...


* To run COILfm on C5

>> python dejong.py
>> python vae.py
>> python optimise.py -e cdiscon -v 2 -r 100

